@model PortfolioService.Models.AddTransactionViewModel

@{
    ViewBag.Title = "AddTransaction";
}

<h2>Add a transaction</h2>

@using (Html.BeginForm("ApplyAddTransaction", "Portfolio", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.TransactionType, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10" style="margin-top: 10px">
            <div class="radio">
                @Html.RadioButtonFor(m => m.TransactionType, "Purchase", new { id = "TransactionTypePurchase" })
                <label for="TransactionTypePurchase">Purchase</label>
            </div>
            <div class="radio">
                @Html.RadioButtonFor(m => m.TransactionType, "Sale", new { id = "TransactionTypeSale" })
                <label for="TransactionTypeSale">Sale</label>
            </div>
            @Html.ValidationMessageFor(m => m.TransactionType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CryptocurrencyType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CryptocurrencyType, new SelectList(new[] {
                new { Value = "BTC", Text = "BTC" },
                new { Value = "ETH", Text = "ETH" },
                new { Value = "LTC", Text = "LTC" },
                new { Value = "BNB", Text = "BNB" },
                new { Value = "DOGE", Text = "DOGE" }
            }, "Value", "Text"), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CryptocurrencyType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DateAndTime, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DateAndTime, new { @class = "form-control", type = "datetime-local" })
            @Html.ValidationMessageFor(m => m.DateAndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>

    <br />
}

@if (ViewBag.ConversionError != null && ViewBag.ConversionError == true) {
    <p style="color:red">Price of cryptocurrency not available for the specified date and time</p>
}
